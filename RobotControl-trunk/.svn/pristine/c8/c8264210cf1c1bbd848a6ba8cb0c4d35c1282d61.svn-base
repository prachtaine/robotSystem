<UserControl x:Class="RobotApp.Views.MotorItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mui="http://firstfloorsoftware.com/ModernUI"
             d:DesignHeight="300" d:DesignWidth="300">
    <StackPanel>
        <TextBlock DockPanel.Dock="Left" Text="{Binding Id, StringFormat={}Motor {0} Configuration}" FontSize="20" Margin="0, 0, 0, 10" />
        <UniformGrid Columns="2">
            <!--This is just to automatically pad all the elements in this grid-->
            <UniformGrid.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Margin" Value="5"/>
                </Style>
                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Setter Property="Margin" Value="5"/>
                </Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                    <Setter Property="Margin" Value="5"/>
                </Style>
                <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                    <Setter Property="Margin" Value="5"/>
                </Style>
            </UniformGrid.Resources>


            <TextBlock Text="Motor Name"/>
            <TextBox Text="{Binding FriendlyName}" />

            <TextBlock Text="Control Mode"/>
            <!-- TODO: Move this list into the ViewModel -->
            <ComboBox SelectedIndex="{Binding ControlModeIndex}"> 
                <ComboBoxItem>Reserved</ComboBoxItem>
                <ComboBoxItem>Potentiometer</ComboBoxItem>
                <ComboBoxItem>Relative Step</ComboBoxItem>
            </ComboBox>
            
            <TextBlock Text="Jogging"/>
            <StackPanel Orientation="Horizontal">
                <mui:ModernButton IconData="{StaticResource BackIconData}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding Path=JogReverseDown}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding Path=JogReverseUp}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </mui:ModernButton>
                <mui:ModernButton Margin="0, 0, 10, 0" DockPanel.Dock="Left" IconData="{StaticResource ForwardIconData}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding Path=JogForwardDown}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding Path=JogForwardUp}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </mui:ModernButton>
            </StackPanel>

            <TextBlock Text="Jog Speed"/>
            <TextBox Text="{Binding JogSpeed}"/>

            <TextBlock Text="Encoder Counts Per Revolution"/>
            <TextBox Text="{Binding EncoderCountsPerRevolution}" />

            <TextBlock Text="Kp"/>
            <TextBox Text="{Binding Kp}" />

            <TextBlock Text="Angle Setpoint"/>
            <TextBox Text="{Binding AngleSetpoint}" />

        </UniformGrid>
    </StackPanel>
</UserControl>
